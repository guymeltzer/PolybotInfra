apiVersion: apps/v1
kind: Deployment
metadata:
  name: polybot
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polybot
  template:
    metadata:
      labels:
        app: polybot
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      volumes:
        - name: polybot-certs
          secret:
            secretName: polybot-tls
      containers:
        - name: polybot
          image: guymeltzer/polybot:1.0.131
          ports:
            - name: http
              containerPort: 30619
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: telegram_token
            - name: SQS_QUEUE_URL
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: sqs_queue_url
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: s3_bucket_name
            - name: TELEGRAM_APP_URL
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: telegram_app_url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: aws_secret_access_key
            - name: MONGO_COLLECTION
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: mongo_collection
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: mongo_db
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: mongo_uri
            - name: POLYBOT_URL
              valueFrom:
                secretKeyRef:
                  name: polybot-secrets
                  key: polybot_url
          volumeMounts:
            - name: polybot-certs
              mountPath: "/app/certs"
              readOnly: true
      imagePullSecrets:
        - name: docker-registry-credentials